/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')();
const MangasIndexLazyImport = createFileRoute('/mangas/')();
const AnimesIndexLazyImport = createFileRoute('/animes/')();
const MangasIdLazyImport = createFileRoute('/mangas/$id')();
const AnimesIdLazyImport = createFileRoute('/animes/$id')();

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

const MangasIndexLazyRoute = MangasIndexLazyImport.update({
  path: '/mangas/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/mangas/index.lazy').then((d) => d.Route));

const AnimesIndexLazyRoute = AnimesIndexLazyImport.update({
  path: '/animes/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/animes/index.lazy').then((d) => d.Route));

const MangasIdLazyRoute = MangasIdLazyImport.update({
  path: '/mangas/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/mangas/$id.lazy').then((d) => d.Route));

const AnimesIdLazyRoute = AnimesIdLazyImport.update({
  path: '/animes/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/animes/$id.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/animes/$id': {
      id: '/animes/$id';
      path: '/animes/$id';
      fullPath: '/animes/$id';
      preLoaderRoute: typeof AnimesIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/mangas/$id': {
      id: '/mangas/$id';
      path: '/mangas/$id';
      fullPath: '/mangas/$id';
      preLoaderRoute: typeof MangasIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/animes/': {
      id: '/animes/';
      path: '/animes';
      fullPath: '/animes';
      preLoaderRoute: typeof AnimesIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/mangas/': {
      id: '/mangas/';
      path: '/mangas';
      fullPath: '/mangas';
      preLoaderRoute: typeof MangasIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute;
  '/animes/$id': typeof AnimesIdLazyRoute;
  '/mangas/$id': typeof MangasIdLazyRoute;
  '/animes': typeof AnimesIndexLazyRoute;
  '/mangas': typeof MangasIndexLazyRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute;
  '/animes/$id': typeof AnimesIdLazyRoute;
  '/mangas/$id': typeof MangasIdLazyRoute;
  '/animes': typeof AnimesIndexLazyRoute;
  '/mangas': typeof MangasIndexLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexLazyRoute;
  '/animes/$id': typeof AnimesIdLazyRoute;
  '/mangas/$id': typeof MangasIdLazyRoute;
  '/animes/': typeof AnimesIndexLazyRoute;
  '/mangas/': typeof MangasIndexLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/animes/$id' | '/mangas/$id' | '/animes' | '/mangas';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/animes/$id' | '/mangas/$id' | '/animes' | '/mangas';
  id:
    | '__root__'
    | '/'
    | '/animes/$id'
    | '/mangas/$id'
    | '/animes/'
    | '/mangas/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  AnimesIdLazyRoute: typeof AnimesIdLazyRoute;
  MangasIdLazyRoute: typeof MangasIdLazyRoute;
  AnimesIndexLazyRoute: typeof AnimesIndexLazyRoute;
  MangasIndexLazyRoute: typeof MangasIndexLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AnimesIdLazyRoute: AnimesIdLazyRoute,
  MangasIdLazyRoute: MangasIdLazyRoute,
  AnimesIndexLazyRoute: AnimesIndexLazyRoute,
  MangasIndexLazyRoute: MangasIndexLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/animes/$id",
        "/mangas/$id",
        "/animes/",
        "/mangas/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/animes/$id": {
      "filePath": "animes/$id.lazy.tsx"
    },
    "/mangas/$id": {
      "filePath": "mangas/$id.lazy.tsx"
    },
    "/animes/": {
      "filePath": "animes/index.lazy.tsx"
    },
    "/mangas/": {
      "filePath": "mangas/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
